[mysql]
DB_SERVER = 10.0.0.32
DB_USER = constructible
DB_PASSWORD = abc123
DB_DATABASE_NAME = constructible_data

; Enabling this (set to 1) will print the sql command executed. 
PRINT_SQL_COMMAND = 0

[mysql_schema]
DB_TABLE_NAME_WORKING = points_working
DB_TABLE_NAME_KNOWN = points_known
DB_TABLE_NAME_STATUS = run_status

; default: 80
; needs to be the same as STR_POINT_DIGITS
DB_POINT_CHAR_DIGITS = 80
; default: 25
DB_POINT_DECIMAL_DIGITS_PRECISION = 25
; default: 20
DB_POINT_DECIMAL_DIGITS_SCALE = 20

[app]
; Distributed client ids, these need to be unique.
; Id 0 gets special privileges.
CLIENT_ID = 0

; Distributed clients will work on the same batch.
BATCH_ID = 1

; Parameter passed to GMP to set the default precision.
; default: 200
GMP_PRECISION_BITS = 200

; This number should be the base 10 representation of the number of significant
; digits, which should be ~ ln(2^PRECISION_BITS)/ln(10).
; Default: 80
; needs to be the same as DB_POINT_CHAR_DIGITS
STR_POINT_DIGITS = 80

; Number of decimal digits to use when printing output. This is smaller than
; the above to avoid extra clutter.
PRINT_DIGITS = 10

; Will attempt to construct points only this many times.
MAX_ITERATIONS = 1

; When iterating over objects, enabling this will describe what is 
; being checked.
PRINT_OBJECT_DESCRIPTION_IN_INTERSECTION_CHECK = 0

; When iterating over objects, enabling will print how many points
; where found for that intersect.
PRINT_NUMBER_INTERSECTIONS_FOUND = 0

; Enabling this will print a message when adding a point to the hash
; of known points.
PRINT_ADDING_COORDS = 0

; Enabling this will print out some numbers at the end of each iteration.
PRINT_ITERATION_STATS = 1

; If more than this many seconds have passed since the last status 
; update, write a status update in the inner p3/p4 loop.
; Set to zero or negative to disable.
; Default 10.
UPDATE_INTERVAL_SEC = 10

; If more than this many seconds have passed since the last
; checkpoint, save a new checkpoint. Set to zero or negative to disable.
; Default 30.
; NOT USED
CHECKPOINT_INTERVAL_SEC = 30

; If set, will attempt to load previous state from database and resume 
; from there. Set to 0 to ignore and load points from starting file.
; NOT USED
ALLOW_RESUME_FROM_CHECKPOINT = 0

; After everything is done, sort the points and write the output to a file.
; This file is truncated and overwritten.
; NOT USED
WRITE_POINTS_TO_FILE = 0
OUTPUT_FILENAME = data.out

; absolute values less than this will be considered zero
STR_EPSILON = 0.00000000000000000001

; Read initial starting points from here
STARTING_POINTS_FILE = starting.points

; Buffer size when reading starting points from file.
; This needs to be at least (length of line + 3).
STARTING_POINTS_FILE_LINE_BUFFER = 1024

; Abort if the application has been running longer than this many seconds.
BENCHMARK_TIME_SEC = 0